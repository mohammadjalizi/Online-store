{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  selectedProducts: [],\n  selectedProductsID: []\n};\nexport const counterSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const proudoctwithQuantity = {\n        ...action.payload,\n        \"Quantity\": 1\n      };\n      state.selectedProducts.push(proudoctwithQuantity);\n      state.selectedProductsID.push(action.payload);\n    },\n    increaseQuntity: (state, action) => {\n      const increasedproudoct = state.selectedProducts.find(item => {\n        return item.id === action.payload.id;\n      });\n      increasedproudoct.Quantity += 1;\n    },\n    decreaseQuntity: (state, action) => {\n      //   state.value += action.payload\n\n      const increasedproudoct = state.selectedProducts.find(item => {\n        return item.id === action.payload.id;\n      });\n      increasedproudoct.Quantity -= 1;\n      if (increasedproudoct.Quantity === 0) {\n        // delete the selected product\n        const newArry = state.selectedProducts.filter(item => {\n          return item.id !== action.payload.id;\n        });\n        state.selectedProducts = newArry;\n      }\n    },\n    deletProudoct: (state, action) => {\n      const newArry = state.selectedProducts.filter(item => {\n        return item.id !== action.payload.id;\n      });\n      state.selectedProducts = newArry;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addToCart,\n  increaseQuntity,\n  decreaseQuntity,\n  deletProudoct\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","selectedProducts","selectedProductsID","counterSlice","name","reducers","addToCart","state","action","proudoctwithQuantity","payload","push","increaseQuntity","increasedproudoct","find","item","id","Quantity","decreaseQuntity","newArry","filter","deletProudoct","actions","reducer"],"sources":["/media/mohammad/Data/aliihassan project/matrial ul/Folder/Online store/online/online store/front-end/src/Redux/CartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  selectedProducts: [],\n  selectedProductsID: [],\n\n}\n\nexport const counterSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const proudoctwithQuantity={...action.payload,\"Quantity\":1}\n   state.selectedProducts.push(proudoctwithQuantity)\n   state.selectedProductsID.push(action.payload)\n        },\n  \n    increaseQuntity: (state, action) => {\n  const increasedproudoct=state.selectedProducts.find((item)=>{\nreturn   item.id === action.payload.id  \n\n\n  })\n  increasedproudoct.Quantity +=1\n    },\n \n    decreaseQuntity: (state, action) => {\n        //   state.value += action.payload\n\n        const increasedproudoct=state.selectedProducts.find((item)=>{\n          return   item.id === action.payload.id  \n          \n          \n            })\n            increasedproudoct.Quantity -=1\n            if (increasedproudoct.Quantity===0) {\n            // delete the selected product\n            const newArry=state.selectedProducts.filter((item)=>{\n return item.id !==action.payload.id\n             \n\n            })\n            state.selectedProducts=newArry\n\n            }\n\n        },\n        deletProudoct: (state, action) => {\n          const newArry=state.selectedProducts.filter((item)=>{\n            return item.id !==action.payload.id\n                        \n           \n                       })\n                       state.selectedProducts=newArry\n            },\n\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { addToCart,increaseQuntity,decreaseQuntity,deletProudoct } = counterSlice.actions\n\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,gBAAgB,EAAE,EAAE;EACpBC,kBAAkB,EAAE;AAEtB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EACtCK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMC,oBAAoB,GAAC;QAAC,GAAGD,MAAM,CAACE,OAAO;QAAC,UAAU,EAAC;MAAC,CAAC;MAC9DH,KAAK,CAACN,gBAAgB,CAACU,IAAI,CAACF,oBAAoB,CAAC;MACjDF,KAAK,CAACL,kBAAkB,CAACS,IAAI,CAACH,MAAM,CAACE,OAAO,CAAC;IACxC,CAAC;IAELE,eAAe,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MACtC,MAAMK,iBAAiB,GAACN,KAAK,CAACN,gBAAgB,CAACa,IAAI,CAAEC,IAAI,IAAG;QAC9D,OAASA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACE,OAAO,CAACM,EAAE;MAGpC,CAAC,CAAC;MACFH,iBAAiB,CAACI,QAAQ,IAAG,CAAC;IAC5B,CAAC;IAEDC,eAAe,EAAE,CAACX,KAAK,EAAEC,MAAM,KAAK;MAChC;;MAEA,MAAMK,iBAAiB,GAACN,KAAK,CAACN,gBAAgB,CAACa,IAAI,CAAEC,IAAI,IAAG;QAC1D,OAASA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACE,OAAO,CAACM,EAAE;MAGpC,CAAC,CAAC;MACFH,iBAAiB,CAACI,QAAQ,IAAG,CAAC;MAC9B,IAAIJ,iBAAiB,CAACI,QAAQ,KAAG,CAAC,EAAE;QACpC;QACA,MAAME,OAAO,GAACZ,KAAK,CAACN,gBAAgB,CAACmB,MAAM,CAAEL,IAAI,IAAG;UAC/D,OAAOA,IAAI,CAACC,EAAE,KAAIR,MAAM,CAACE,OAAO,CAACM,EAAE;QAGxB,CAAC,CAAC;QACFT,KAAK,CAACN,gBAAgB,GAACkB,OAAO;MAE9B;IAEJ,CAAC;IACDE,aAAa,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMW,OAAO,GAACZ,KAAK,CAACN,gBAAgB,CAACmB,MAAM,CAAEL,IAAI,IAAG;QAClD,OAAOA,IAAI,CAACC,EAAE,KAAIR,MAAM,CAACE,OAAO,CAACM,EAAE;MAGxB,CAAC,CAAC;MACFT,KAAK,CAACN,gBAAgB,GAACkB,OAAO;IACzC;EAEV;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEb,SAAS;EAACM,eAAe;EAACM,eAAe;EAACG;AAAc,CAAC,GAAGlB,YAAY,CAACmB,OAAO;AAE/F,eAAenB,YAAY,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}