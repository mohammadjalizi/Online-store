{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\n// Or from '@reduxjs/toolkit/query/react'\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { onproduct, productsApi } from './ProudoctsApi';\nimport cartReducer from './CartSlice';\nexport const store = configureStore({\n  reducer: {\n    carttt: cartReducer,\n    [productsApi.reducerPath]: productsApi.reducer,\n    [oneproductsApi.reducerPath]: oneproductsApi.reducer\n  },\n  // Adding the api middleware enables caching, invalidation, polling,\n  // and other useful features of `rtk-query`.\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(productsApi.middleware).concat(oneproductsApi.middleware)\n});\n\n// optional, but required for refetchOnFocus/refetchOnReconnect behaviors\n// see `setupListeners` docs - takes an optional callback as the 2nd arg for customization\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","setupListeners","onproduct","productsApi","cartReducer","store","reducer","carttt","reducerPath","oneproductsApi","middleware","getDefaultMiddleware","concat","dispatch"],"sources":["D:/aliihassan project/matrial ul/Folder/Online store/online/online-store/front-end/src/Redux/Store.js"],"sourcesContent":["\r\n \r\n\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n// Or from '@reduxjs/toolkit/query/react'\r\nimport { setupListeners } from '@reduxjs/toolkit/query'\r\nimport { onproduct, productsApi } from './ProudoctsApi'\r\nimport cartReducer from './CartSlice'\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n     carttt: cartReducer,\r\n    [productsApi.reducerPath]: productsApi.reducer,\r\n    [oneproductsApi.reducerPath]: oneproductsApi.reducer,\r\n  },\r\n  // Adding the api middleware enables caching, invalidation, polling,\r\n  // and other useful features of `rtk-query`.\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware()\r\n    .concat(productsApi.middleware)\r\n    .concat(oneproductsApi.middleware),\r\n})\r\n\r\n// optional, but required for refetchOnFocus/refetchOnReconnect behaviors\r\n// see `setupListeners` docs - takes an optional callback as the 2nd arg for customization\r\nsetupListeners(store.dispatch)"],"mappings":"AAGA,SAASA,cAAc,QAAQ,kBAAkB;AACjD;AACA,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,SAAS,EAAEC,WAAW,QAAQ,gBAAgB;AACvD,OAAOC,WAAW,MAAM,aAAa;AAGrC,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IACNC,MAAM,EAAEH,WAAW;IACpB,CAACD,WAAW,CAACK,WAAW,GAAGL,WAAW,CAACG,OAAO;IAC9C,CAACG,cAAc,CAACD,WAAW,GAAGC,cAAc,CAACH;EAC/C,CAAC;EACD;EACA;EACAI,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,EAAE,CACrBC,MAAM,CAACT,WAAW,CAACO,UAAU,CAAC,CAC9BE,MAAM,CAACH,cAAc,CAACC,UAAU;AACrC,CAAC,CAAC;;AAEF;AACA;AACAT,cAAc,CAACI,KAAK,CAACQ,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}