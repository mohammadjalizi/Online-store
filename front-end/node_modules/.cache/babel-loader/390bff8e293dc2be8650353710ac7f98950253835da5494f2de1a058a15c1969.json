{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Define a service using a base URL and expected endpoints\nexport const ProudoctsAPI = createApi({\n  reducerPath: 'Proudocts',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:5000/'\n  }),\n  endpoints: builder => ({\n    getPokemonByName: builder.query({\n      query: name => `products`\n    })\n  })\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const {\n  useGetPokemonByNameQuery\n} = ProudoctsAPI;","map":{"version":3,"names":["createApi","fetchBaseQuery","ProudoctsAPI","reducerPath","baseQuery","baseUrl","endpoints","builder","getPokemonByName","query","name","useGetPokemonByNameQuery"],"sources":["/media/mohammad/Data/aliihassan project/matrial ul/Folder/Online store/online/online store/front-end/src/Redux/ProudoctsApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\n// Define a service using a base URL and expected endpoints\nexport const ProudoctsAPI = createApi({\n  reducerPath: 'Proudocts',\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:5000/' }),\n  endpoints: (builder) => ({\n    getPokemonByName: builder.query({\n      query: (name) => `products`,\n    }),\n  }),\n})\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const { useGetPokemonByNameQuery } = ProudoctsAPI"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;;AAExE;AACA,OAAO,MAAMC,YAAY,GAAGF,SAAS,CAAC;EACpCG,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAyB,CAAC,CAAC;EAChEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,gBAAgB,EAAED,OAAO,CAACE,KAAK,CAAC;MAC9BA,KAAK,EAAGC,IAAI,IAAM;IACpB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACA,OAAO,MAAM;EAAEC;AAAyB,CAAC,GAAGT,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}